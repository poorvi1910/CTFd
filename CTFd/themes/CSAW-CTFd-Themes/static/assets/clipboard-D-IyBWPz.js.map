{"version":3,"file":"clipboard-D-IyBWPz.js","sources":["../../node_modules/@ctfdio/ctfd-js/forms.js","../../assets/js/utils/clipboard.js"],"sourcesContent":["/**\n * Serialize all form data into an array\n * https://kbarker.dev/blog/serialize-form-data-into-an-array-in-vanilla-js/\n * @param {HTMLFormElement} form The form to serialize\n * @returns {Array} The serialized form data\n */\nfunction serializeArray(form) {\n  // Create a new FormData object\n  const formData = new FormData(form);\n\n  // Create an array to hold the name/value pairs\n  const pairs = [];\n\n  // Add each name/value pair to the array\n  for (const [name, value] of formData) {\n    pairs.push({ name, value });\n  }\n\n  // Return the array\n  return pairs;\n}\n\nexport function serializeJSON(form, initial, omit_nulls) {\n  let params = {};\n  let values = serializeArray(form);\n\n  let checked = form.querySelectorAll(\"input[type=checkbox]:checked\");\n  checked.forEach(checkbox => {\n    values.push({ name: checkbox.name, value: true });\n  });\n\n  let unchecked = form.querySelectorAll(\"input[type=checkbox]:not(:checked)\");\n  unchecked.forEach(checkbox => {\n    values.push({ name: checkbox.name, value: false });\n  });\n\n  // Check that values have changed\n  values.map(x => {\n    if (omit_nulls) {\n      if (x.value !== null && x.value !== \"\") {\n        params[x.name] = x.value;\n      } else {\n        let input = form.querySelector(`[name='${x.name}']`);\n        if (initial[input.name] !== input.value) {\n          params[x.name] = x.value;\n        }\n      }\n    } else {\n      params[x.name] = x.value;\n    }\n  });\n  return params;\n}\n","import { Tooltip } from \"bootstrap\";\n\nexport function copyToClipboard($input) {\n  const tooltip = new Tooltip($input, {\n    title: \"Copied!\",\n    trigger: \"manual\",\n  });\n\n  navigator.clipboard.writeText($input.value).then(() => {\n    tooltip.show();\n    setTimeout(() => {\n      tooltip.hide();\n    }, 1500);\n  });\n}\n"],"names":["serializeArray","form","formData","pairs","name","value","serializeJSON","initial","omit_nulls","params","values","checkbox","x","input","copyToClipboard","$input","tooltip","Tooltip"],"mappings":"wCAMA,SAASA,EAAeC,EAAM,CAE5B,MAAMC,EAAW,IAAI,SAASD,CAAI,EAG5BE,EAAQ,CAAA,EAGd,SAAW,CAACC,EAAMC,CAAK,IAAKH,EAC1BC,EAAM,KAAK,CAAE,KAAAC,EAAM,MAAAC,CAAO,CAAA,EAI5B,OAAOF,CACT,CAEO,SAASG,EAAcL,EAAMM,EAASC,EAAY,CACvD,IAAIC,EAAS,CAAA,EACTC,EAASV,EAAeC,CAAI,EAGhC,OADcA,EAAK,iBAAiB,8BAA8B,EAC1D,QAAQU,GAAY,CAC1BD,EAAO,KAAK,CAAE,KAAMC,EAAS,KAAM,MAAO,EAAI,CAAE,CACpD,CAAG,EAEeV,EAAK,iBAAiB,oCAAoC,EAChE,QAAQU,GAAY,CAC5BD,EAAO,KAAK,CAAE,KAAMC,EAAS,KAAM,MAAO,EAAK,CAAE,CACrD,CAAG,EAGDD,EAAO,IAAIE,GAAK,CACd,GAAIJ,EACF,GAAII,EAAE,QAAU,MAAQA,EAAE,QAAU,GAClCH,EAAOG,EAAE,IAAI,EAAIA,EAAE,UACd,CACL,IAAIC,EAAQZ,EAAK,cAAc,UAAUW,EAAE,IAAI,IAAI,EAC/CL,EAAQM,EAAM,IAAI,IAAMA,EAAM,QAChCJ,EAAOG,EAAE,IAAI,EAAIA,EAAE,MAEtB,MAEDH,EAAOG,EAAE,IAAI,EAAIA,EAAE,KAEzB,CAAG,EACMH,CACT,CClDO,SAASK,EAAgBC,EAAQ,CACtC,MAAMC,EAAU,IAAIC,EAAQF,EAAQ,CAClC,MAAO,UACP,QAAS,QACb,CAAG,EAED,UAAU,UAAU,UAAUA,EAAO,KAAK,EAAE,KAAK,IAAM,CACrDC,EAAQ,KAAI,EACZ,WAAW,IAAM,CACfA,EAAQ,KAAI,CACb,EAAE,IAAI,CACX,CAAG,CACH","x_google_ignoreList":[0]}
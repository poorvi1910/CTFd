{"version":3,"file":"settings-CMAzxr3X.js","sources":["../../assets/js/settings.js"],"sourcesContent":["import Alpine from \"alpinejs\";\nimport { Modal } from \"bootstrap\";\nimport { serializeJSON } from \"@ctfdio/ctfd-js/forms\";\n\nimport CTFd from \"./index\";\nimport { copyToClipboard } from \"./utils/clipboard\";\n\nwindow.Alpine = Alpine;\n\nAlpine.data(\"SettingsForm\", () => ({\n  success: null,\n  error: null,\n  initial: null,\n  errors: [],\n\n  init() {\n    this.initial = serializeJSON(this.$el);\n  },\n\n  async updateProfile() {\n    this.success = null;\n    this.error = null;\n    this.errors = [];\n\n    let data = serializeJSON(this.$el, this.initial, true);\n\n    // Process fields[id] to fields: {}\n    data.fields = [];\n    for (const property in data) {\n      if (property.match(/fields\\[\\d+\\]/)) {\n        let field = {};\n        let id = parseInt(property.slice(7, -1));\n        field[\"field_id\"] = id;\n        field[\"value\"] = data[property];\n        data.fields.push(field);\n        delete data[property];\n      }\n    }\n\n    // Send API request\n    const response = await CTFd.pages.settings.updateSettings(data);\n    if (response.success) {\n      this.success = true;\n      this.error = false;\n\n      setTimeout(() => {\n        this.success = null;\n        this.error = null;\n      }, 3000);\n    } else {\n      this.success = false;\n      this.error = true;\n\n      Object.keys(response.errors).map(error => {\n        const error_msg = response.errors[error];\n        this.errors.push(error_msg);\n      });\n    }\n  },\n}));\n\nAlpine.data(\"TokensForm\", () => ({\n  token: null,\n\n  async generateToken() {\n    const data = serializeJSON(this.$el);\n\n    if (!data.expiration) {\n      delete data.expiration;\n    }\n    const response = await CTFd.pages.settings.generateToken(data);\n    this.token = response.data.value;\n\n    new Modal(this.$refs.tokenModal).show();\n  },\n\n  copyToken() {\n    copyToClipboard(this.$refs.token);\n  },\n}));\n\nAlpine.data(\"Tokens\", () => ({\n  selectedTokenId: null,\n\n  async deleteTokenModal(tokenId) {\n    this.selectedTokenId = tokenId;\n    new Modal(this.$refs.confirmModal).show();\n  },\n\n  async deleteSelectedToken() {\n    await CTFd.pages.settings.deleteToken(this.selectedTokenId);\n    const $token = this.$refs[`token-${this.selectedTokenId}`];\n\n    if ($token) {\n      $token.remove();\n    }\n  },\n}));\n\nAlpine.start();\n"],"names":["Alpine","serializeJSON","data","property","field","id","response","CTFd","error","error_msg","Modal","copyToClipboard","tokenId","$token"],"mappings":"yGAOA,OAAO,OAASA,EAEhBA,EAAO,KAAK,eAAgB,KAAO,CACjC,QAAS,KACT,MAAO,KACP,QAAS,KACT,OAAQ,CAAE,EAEV,MAAO,CACL,KAAK,QAAUC,EAAc,KAAK,GAAG,CACtC,EAED,MAAM,eAAgB,CACpB,KAAK,QAAU,KACf,KAAK,MAAQ,KACb,KAAK,OAAS,GAEd,IAAIC,EAAOD,EAAc,KAAK,IAAK,KAAK,QAAS,EAAI,EAGrDC,EAAK,OAAS,GACd,UAAWC,KAAYD,EACrB,GAAIC,EAAS,MAAM,eAAe,EAAG,CACnC,IAAIC,EAAQ,CAAA,EACRC,EAAK,SAASF,EAAS,MAAM,EAAG,EAAE,CAAC,EACvCC,EAAM,SAAcC,EACpBD,EAAM,MAAWF,EAAKC,CAAQ,EAC9BD,EAAK,OAAO,KAAKE,CAAK,EACtB,OAAOF,EAAKC,CAAQ,CACrB,CAIH,MAAMG,EAAW,MAAMC,EAAK,MAAM,SAAS,eAAeL,CAAI,EAC1DI,EAAS,SACX,KAAK,QAAU,GACf,KAAK,MAAQ,GAEb,WAAW,IAAM,CACf,KAAK,QAAU,KACf,KAAK,MAAQ,IACd,EAAE,GAAI,IAEP,KAAK,QAAU,GACf,KAAK,MAAQ,GAEb,OAAO,KAAKA,EAAS,MAAM,EAAE,IAAIE,GAAS,CACxC,MAAMC,EAAYH,EAAS,OAAOE,CAAK,EACvC,KAAK,OAAO,KAAKC,CAAS,CAClC,CAAO,EAEJ,CACH,EAAE,EAEFT,EAAO,KAAK,aAAc,KAAO,CAC/B,MAAO,KAEP,MAAM,eAAgB,CACpB,MAAME,EAAOD,EAAc,KAAK,GAAG,EAE9BC,EAAK,YACR,OAAOA,EAAK,WAEd,MAAMI,EAAW,MAAMC,EAAK,MAAM,SAAS,cAAcL,CAAI,EAC7D,KAAK,MAAQI,EAAS,KAAK,MAE3B,IAAII,EAAM,KAAK,MAAM,UAAU,EAAE,KAAI,CACtC,EAED,WAAY,CACVC,EAAgB,KAAK,MAAM,KAAK,CACjC,CACH,EAAE,EAEFX,EAAO,KAAK,SAAU,KAAO,CAC3B,gBAAiB,KAEjB,MAAM,iBAAiBY,EAAS,CAC9B,KAAK,gBAAkBA,EACvB,IAAIF,EAAM,KAAK,MAAM,YAAY,EAAE,KAAI,CACxC,EAED,MAAM,qBAAsB,CAC1B,MAAMH,EAAK,MAAM,SAAS,YAAY,KAAK,eAAe,EAC1D,MAAMM,EAAS,KAAK,MAAM,SAAS,KAAK,eAAe,EAAE,EAErDA,GACFA,EAAO,OAAM,CAEhB,CACH,EAAE,EAEFb,EAAO,MAAO"}
{"version":3,"file":"users_private-DrmN0Zkw.js","sources":["../../assets/js/users/private.js"],"sourcesContent":["import Alpine from \"alpinejs\";\nimport CTFd from \"../index\";\nimport { colorHash } from \"@ctfdio/ctfd-js/ui\";\nimport { getOption as getUserScoreOption } from \"../utils/graphs/echarts/userscore\";\nimport { embed } from \"../utils/graphs/echarts\";\n\nwindow.Alpine = Alpine;\n\nAlpine.data(\"UserGraphs\", () => ({\n  solves: null,\n  fails: null,\n  awards: null,\n  solveCount: 0,\n  failCount: 0,\n  awardCount: 0,\n\n  getSolvePercentage() {\n    return ((this.solveCount / (this.solveCount + this.failCount)) * 100).toFixed(2);\n  },\n\n  getFailPercentage() {\n    return ((this.failCount / (this.solveCount + this.failCount)) * 100).toFixed(2);\n  },\n\n  getCategoryBreakdown() {\n    const categories = [];\n    const breakdown = {};\n\n    this.solves.data.map(solve => {\n      categories.push(solve.challenge.category);\n    });\n\n    categories.forEach(category => {\n      if (category in breakdown) {\n        breakdown[category] += 1;\n      } else {\n        breakdown[category] = 1;\n      }\n    });\n\n    const data = [];\n    for (const property in breakdown) {\n      const percent = Number((breakdown[property] / categories.length) * 100).toFixed(\n        2,\n      );\n\n      data.push({\n        name: property,\n        count: breakdown[property],\n        color: colorHash(property),\n        percent,\n      });\n    }\n\n    return data;\n  },\n\n  async init() {\n    this.solves = await CTFd.pages.users.userSolves(\"me\");\n    this.fails = await CTFd.pages.users.userFails(\"me\");\n    this.awards = await CTFd.pages.users.userAwards(\"me\");\n\n    this.solveCount = this.solves.meta.count;\n    this.failCount = this.fails.meta.count;\n    this.awardCount = this.awards.meta.count;\n\n    embed(\n      this.$refs.scoregraph,\n      getUserScoreOption(\n        CTFd.user.id,\n        CTFd.user.name,\n        this.solves.data,\n        this.awards.data,\n      ),\n    );\n  },\n}));\n\nAlpine.start();\n"],"names":["Alpine","categories","breakdown","solve","category","data","property","percent","colorHash","CTFd","embed","getUserScoreOption"],"mappings":"wKAMA,OAAO,OAASA,EAEhBA,EAAO,KAAK,aAAc,KAAO,CAC/B,OAAQ,KACR,MAAO,KACP,OAAQ,KACR,WAAY,EACZ,UAAW,EACX,WAAY,EAEZ,oBAAqB,CACnB,OAAS,KAAK,YAAc,KAAK,WAAa,KAAK,WAAc,KAAK,QAAQ,CAAC,CAChF,EAED,mBAAoB,CAClB,OAAS,KAAK,WAAa,KAAK,WAAa,KAAK,WAAc,KAAK,QAAQ,CAAC,CAC/E,EAED,sBAAuB,CACrB,MAAMC,EAAa,CAAA,EACbC,EAAY,CAAA,EAElB,KAAK,OAAO,KAAK,IAAIC,GAAS,CAC5BF,EAAW,KAAKE,EAAM,UAAU,QAAQ,CAC9C,CAAK,EAEDF,EAAW,QAAQG,GAAY,CACzBA,KAAYF,EACdA,EAAUE,CAAQ,GAAK,EAEvBF,EAAUE,CAAQ,EAAI,CAE9B,CAAK,EAED,MAAMC,EAAO,CAAA,EACb,UAAWC,KAAYJ,EAAW,CAChC,MAAMK,EAAU,OAAQL,EAAUI,CAAQ,EAAIL,EAAW,OAAU,GAAG,EAAE,QACtE,CACR,EAEMI,EAAK,KAAK,CACR,KAAMC,EACN,MAAOJ,EAAUI,CAAQ,EACzB,MAAOE,EAAUF,CAAQ,EACzB,QAAAC,CACR,CAAO,CACF,CAED,OAAOF,CACR,EAED,MAAM,MAAO,CACX,KAAK,OAAS,MAAMI,EAAK,MAAM,MAAM,WAAW,IAAI,EACpD,KAAK,MAAQ,MAAMA,EAAK,MAAM,MAAM,UAAU,IAAI,EAClD,KAAK,OAAS,MAAMA,EAAK,MAAM,MAAM,WAAW,IAAI,EAEpD,KAAK,WAAa,KAAK,OAAO,KAAK,MACnC,KAAK,UAAY,KAAK,MAAM,KAAK,MACjC,KAAK,WAAa,KAAK,OAAO,KAAK,MAEnCC,EACE,KAAK,MAAM,WACXC,EACEF,EAAK,KAAK,GACVA,EAAK,KAAK,KACV,KAAK,OAAO,KACZ,KAAK,OAAO,IACb,CACP,CACG,CACH,EAAE,EAEFT,EAAO,MAAO"}
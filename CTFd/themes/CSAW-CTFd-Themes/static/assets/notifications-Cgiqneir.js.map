{"version":3,"file":"notifications-Cgiqneir.js","sources":["../../assets/js/notifications.js"],"sourcesContent":["import Alpine from \"alpinejs\";\nimport CTFd from \"./index\";\n\nwindow.CTFd = CTFd;\nwindow.Alpine = Alpine;\n\n// Get unread notifications from server\nlet lastId = CTFd.events.counter.read.getLast();\nCTFd.fetch(`/api/v1/notifications?since_id=${lastId}`)\n  .then(response => {\n    return response.json();\n  })\n  .then(response => {\n    // Get notifications from server and mark them as read\n    let notifications = response.data;\n    let read = CTFd.events.counter.read.getAll();\n    notifications.forEach(n => {\n      read.push(n.id);\n    });\n    CTFd.events.counter.read.setAll(read);\n\n    // Mark all unread as read\n    CTFd.events.counter.unread.readAll();\n\n    // Broadcast our new count (which should be 0)\n    let count = CTFd.events.counter.unread.getAll().length;\n    CTFd.events.controller.broadcast(\"counter\", {\n      count: count,\n    });\n    Alpine.store(\"unread_count\", count);\n  });\n\nAlpine.start();\n"],"names":["CTFd","Alpine","lastId","response","notifications","read","n","count"],"mappings":"+CAGA,OAAO,KAAOA,EACd,OAAO,OAASC,EAGhB,IAAIC,EAASF,EAAK,OAAO,QAAQ,KAAK,QAAO,EAC7CA,EAAK,MAAM,kCAAkCE,CAAM,EAAE,EAClD,KAAKC,GACGA,EAAS,MACjB,EACA,KAAKA,GAAY,CAEhB,IAAIC,EAAgBD,EAAS,KACzBE,EAAOL,EAAK,OAAO,QAAQ,KAAK,SACpCI,EAAc,QAAQE,GAAK,CACzBD,EAAK,KAAKC,EAAE,EAAE,CACpB,CAAK,EACDN,EAAK,OAAO,QAAQ,KAAK,OAAOK,CAAI,EAGpCL,EAAK,OAAO,QAAQ,OAAO,QAAO,EAGlC,IAAIO,EAAQP,EAAK,OAAO,QAAQ,OAAO,OAAQ,EAAC,OAChDA,EAAK,OAAO,WAAW,UAAU,UAAW,CAC1C,MAAOO,CACb,CAAK,EACDN,EAAO,MAAM,eAAgBM,CAAK,CACtC,CAAG,EAEHN,EAAO,MAAO"}